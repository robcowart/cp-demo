input {
  kafka {
    consumer_threads => 1

    codec => 'json'

    topics => [ "confluent-audit-log-events" ]
    auto_offset_reset => 'earliest'

    group_id => 'ls_audit'
    client_id => 'ls_audit'

    bootstrap_servers => 'kafka1:9091,kafka2:9092'
    security_protocol => 'SASL_PLAINTEXT'

    sasl_mechanism => 'PLAIN'
    sasl_jaas_config => 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";'
  }
}

filter {
  date {
    match => [ "[time]", "ISO8601" ]
    target => "[@timestamp]"
  }
  mutate {
    remove_field => [ "[time]", "[@version]" ]
    add_field => {
      "[message]" => ""
      "[@metadata][granted]" => "%{[data][authorizationInfo][granted]}"
    }
  }

  # Populate the action field.
  if [@metadata][granted] == "true" {
    mutate {
      add_field => { "[action]" => "ALLOWED" }
    }
  } else if [@metadata][granted] == "false" {
    mutate {
      add_field => { "[action]" => "DENIED" }
    }
  }

  # Populate the message field.
  if [data][authorizationInfo][rbacAuthorization][role] {
    mutate {
      replace => { "[message]" => "%{[message]}%{[data][authorizationInfo][rbacAuthorization][role]}" }
    }
  } else {
    mutate {
      replace => { "[message]" => "_" }
    }
  }
  if [data][authenticationInfo][principal] {
    mutate {
      replace => { "[message]" => "%{[message]} %{[data][authenticationInfo][principal]}" }
    }
  } else {
    mutate {
      replace => { "[message]" => "%{[message]} _" }
    }
  }
  if [data][requestMetadata][client_address] {
    mutate {
      replace => { "[message]" => "%{[message]} (from %{[data][requestMetadata][client_address]})" }
    }
  } else {
    mutate {
      replace => { "[message]" => "%{[message]} (_)" }
    }
  }
  if [action] {
    mutate {
      replace => { "[message]" => "%{[message]} %{[action]}" }
    }
  } else {
    mutate {
      replace => { "[message]" => "%{[message]} _" }
    }
  }
  if [data][authorizationInfo][operation] {
    mutate {
      replace => { "[message]" => "%{[message]} %{[data][authorizationInfo][operation]} operation" }
    }
  } else {
    mutate {
      replace => { "[message]" => "%{[message]} _" }
    }
  }
  if [data][resourceName] {
    mutate {
      replace => { "[message]" => "%{[message]} to %{[data][resourceName]}" }
    }
  } else {
    mutate {
      replace => { "[message]" => "%{[message]} _" }
    }
  }
}

output {
  elasticsearch {
    hosts => [ "http://elasticsearch:9200" ]
    index => "audit-%{+YYYY.MM.dd}"
    document_id => "%{id}"
  }
}
